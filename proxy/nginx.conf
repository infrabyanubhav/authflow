# =============================================================================
# AuthFlow Supabase - Nginx Configuration
# =============================================================================
# This configuration provides a reverse proxy for the AuthFlow authentication
# microservice, routing requests to auth-service and session-service.
# 
# Features:
# - Rate limiting for security
# - Gzip compression for performance
# - Security headers for protection
# - Health check endpoints
# - API documentation routing
# =============================================================================

# Events block - Controls how nginx handles connections
events {
    worker_connections 1024;  # Maximum number of connections per worker process
}

# HTTP block - Main configuration for HTTP traffic
http {
    # Include MIME types for proper file handling
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # =============================================================================
    # Performance Optimizations
    # =============================================================================
    sendfile on;                    # Efficient file serving (zero-copy)
    keepalive_timeout 65;           # Keep connections alive for 65 seconds
    client_max_body_size 10M;       # Maximum upload size (10MB)
    
    # =============================================================================
    # Gzip Compression
    # =============================================================================
    # Reduces bandwidth usage and improves page load times
    gzip on;                        # Enable gzip compression
    gzip_types text/plain text/css application/json application/javascript;
    
    # =============================================================================
    # Security Headers
    # =============================================================================
    # Protect against common web vulnerabilities
    add_header X-Frame-Options "SAMEORIGIN" always;        # Prevent clickjacking
    add_header X-Content-Type-Options "nosniff" always;    # Prevent MIME sniffing
    add_header X-XSS-Protection "1; mode=block" always;     # XSS protection
    
    # =============================================================================
    # Rate Limiting
    # =============================================================================
    # Prevent brute force attacks and abuse
    # 10 requests per minute per IP address for auth endpoints
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    
    # =============================================================================
    # Upstream Definitions
    # =============================================================================
    # Define backend services for load balancing
    upstream auth_service {
        server auth-service:8001;    # Auth service running on port 8001
    }
    
    upstream session_service {
        server session-service:8000; # Session service running on port 8000
    }
    
    # =============================================================================
    # Main Server Block
    # =============================================================================
    server {
        listen 80;                  # Listen on port 80 (HTTP)
        server_name localhost;      # Server name (change to your domain in production)
        
        # Hide nginx version for security
        server_tokens off;
        
        # =============================================================================
        # Root Location - Health Check
        # =============================================================================
        # Simple health check endpoint
        location / {
            return 200 "AuthFlow Supabase is running!";
            add_header Content-Type text/plain;
        }
        
        # =============================================================================
        # Health Check Endpoint
        # =============================================================================
        # Route health checks to auth service
        location /health {
            proxy_pass http://auth_service/health;          # Forward to auth service
            proxy_set_header Host $host;                    # Pass original host
            proxy_set_header X-Real-IP $remote_addr;        # Pass client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Pass IP chain
        }
        
        # =============================================================================
        # Auth Service Routes
        # =============================================================================
        # All API v1 requests go to the auth service
        location /api/v1/ {
            # Apply rate limiting (10 requests/minute with burst of 20)
            limit_req zone=auth burst=20 nodelay;
            
            # Forward to auth service
            proxy_pass http://auth_service;
            
            # Pass important headers to backend
            proxy_set_header Host $host;                    # Original host
            proxy_set_header X-Real-IP $remote_addr;        # Client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # IP chain
            proxy_set_header X-Forwarded-Proto $scheme;      # Protocol (http/https)
            
            # Timeout settings (30 seconds for each phase)
            proxy_connect_timeout 30s;                      # Connection timeout
            proxy_send_timeout 30s;                         # Send timeout
            proxy_read_timeout 30s;                         # Read timeout
        }
        
        # =============================================================================
        # Session Service Routes
        # =============================================================================
        # All session-related requests go to session service
        location /session-service/ {
            # Forward to session service (note the trailing slash)
            proxy_pass http://session_service/;
            
            # Pass important headers to backend
            proxy_set_header Host $host;                    # Original host
            proxy_set_header X-Real-IP $remote_addr;        # Client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # IP chain
            proxy_set_header X-Forwarded-Proto $scheme;      # Protocol (http/https)
            
            # Timeout settings (30 seconds for each phase)
            proxy_connect_timeout 30s;                      # Connection timeout
            proxy_send_timeout 30s;                         # Send timeout
            proxy_read_timeout 30s;                         # Read timeout
        }
        
        # =============================================================================
        # API Documentation Routes
        # =============================================================================
        # FastAPI automatic documentation
        location /docs {
            proxy_pass http://auth_service/docs;            # Swagger UI docs
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Alternative API documentation
        location /redoc {
            proxy_pass http://auth_service/redoc;           # ReDoc documentation
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # OpenAPI specification file
        location /openapi.json {
            proxy_pass http://auth_service/openapi.json;    # OpenAPI spec
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # =============================================================================
        # Security - Deny Hidden Files
        # =============================================================================
        # Block access to hidden files and directories
        location ~ /\. {
            deny all;                                       # Deny all access
        }
        
        # =============================================================================
        # Logging Configuration
        # =============================================================================
        # Log all requests and errors for monitoring
        access_log /var/log/nginx/authflow_access.log;     # Access logs
        error_log /var/log/nginx/authflow_error.log;       # Error logs
    }
}

# =============================================================================
# HTTPS Configuration (Uncomment for Production)
# =============================================================================
# For production, uncomment and configure the HTTPS server block below:
#
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#     
#     # SSL certificate configuration
#     ssl_certificate /etc/ssl/certs/authflow.crt;
#     ssl_certificate_key /etc/ssl/private/authflow.key;
#     
#     # SSL security settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # HTTP Strict Transport Security
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Copy all location blocks from the HTTP server above
# }